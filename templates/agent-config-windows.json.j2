
# The agent section includes fields for the overall configuration of the agent

{
  "agent": {
    "metrics_collection_interval": {{ aws_cw_collection_interval }},
    "region": "{{ aws_cw_region }}",
    "logfile": "{{ aws_cw_agent_log_file }}",
    "debug": {{ aws_cw_log_debug | bool | lower }}
  },
  
  # The metrics section specifies the custom metrics for collection and publishing to CloudWatch

   "metrics": {
    "namespace": "{{ aws_cw_namespace }}",
    "metrics_collected": {
     "Processor": {     
        "measurement": [
          {"name": "% Idle Time", "rename": "CPU_IDLE", "unit": "Percent"},
          "% Interrupt Time",
          "% User Time",
          "% Processor Time"
        ],
        "resources": [
          "*"
        ]
      },
      "LogicalDisk": {
        "measurement": [
          {"name": "% Idle Time", "unit": "Percent"},
          {"name": "% Disk Read Time", "rename": "DISK_READ"},
          "% Disk Write Time"
        ],
        "resources": [
          "*"
        ]
      },
      "Memory": {
        "metrics_collection_interval": {{ aws_cw_collection_interval }},
        "measurement": [
          "Available Bytes",
          "Cache Faults/sec",
          "Page Faults/sec",
          "Pages/sec"
        ]
      },
      "Network Interface": {
        "metrics_collection_interval": {{ aws_cw_collection_interval }},
        "measurement": [
          "Bytes Received/sec",
          "Bytes Sent/sec",
          "Packets Received/sec",
          "Packets Sent/sec"
        ],
        "resources": [
          "*"
        ],
        "append_dimensions": {
          "d3": "win_bo"
        }
      },
      "System": {
        "measurement": [
          "Context Switches/sec",
          "System Calls/sec",
          "Processor Queue Length"
        ]
      }
    }
  } {% if (aws_cw_logfiles | length > 0) or (aws_cw_windows_events | length > 0) %},


# The logs section specifies what log files are published to CloudWatch Logs. This can include events from the Windows Event Log if the server runs Windows Server.

  "logs": {
    "logs_collected": {       
      {% if aws_cw_logfiles | length > 0 %}
      "files": {
        "collect_list": [
          {% for logfile in aws_cw_logfiles %}
          {
            "file_path": "{{ logfile.path }}",
            "log_group_name": "{{ logfile.log_group }}",
            "log_stream_name": "{instance_id}/{local_hostname}",
            "timestamp_format": "{{logfile.timestamp_format}}"
          }{% if not loop.last %},{% endif %}
          {% endfor %}
        ]
      },
      {% endif %}         
      {% if aws_cw_windows_events | length > 0 %}
      
# The windows_events section specifies the type of Windows events to collect from servers running Windows Server

# collect_list – Required if windows_events is included. Specifies the types and levels of Windows events to be collected
# event_name – Specifies the type of Windows events to log
# event_levels – Specifies the levels of event to log. You must specify each level to log. Possible values include INFORMATION, WARNING, ERROR, CRITICAL, and VERBOSE
  This field is required for each type of Windows event to log.
# log_group_name – Required. Specifies what to use as the log group name in CloudWatch Logs.



      "windows_events": {
               "collect_list": [
                  {% for event in aws_cw_windows_events %}
                   {
                       "event_name": "{{ event.name }}",
                       "event_levels": [ {% for level in event.levels %} "{{ level }}" {% if not loop.last %}, {% endif %} {% endfor %} ],
                       "event_format": "{{ event.format }}",
                       "log_group_name": "{{ event.log_group }}",
                       "log_stream_name": "{instance_id}/{local_hostname}"                       
                   }{% if not loop.last %},{% endif %}
                   {% endfor %}
               ]
           }
          {% endif %}   

    }
  }
  {% endif %}
}

